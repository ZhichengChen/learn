{
  "name": "JSON APIs and AJAX",
  "order": 2,
  "time": "2 hours",
  "helpRoom": "Help",
  "required": [
    {
      "link": "https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/3.3.7/css/bootstrap.css"
    }
  ],
  "challenges": [
    {
      "id": "587d7fad367417b2b2512be1",
      "title": "Handle Click Events with JavaScript using the onclick property",
      "description": [
        "你希望代码仅在页面完成加载后执行。为此，你可将名为<code>DOMContentLoaded</code>的 JavaScript 事件附加到文档中。以下是实现的代码：",
        "<blockquote>document.addEventListener('DOMContentLoaded',function() {<br><br>});</blockquote>",
        "你可以在<code>DOMContentLoaded</code>函数内部添加事件处理方法。你可以添加<code>onclick</code>事件处理器，当用户点击 id 为<code>getMessage</code>的元素时会触发事件。添加以下代码：",
        "<blockquote>document.getElementById('getMessage').onclick=function(){};</blockquote>",
        "<hr>",
        "在<code>DOMContentLoaded</code>函数内为 id 为<code>getMessage</code>的元素添加一个 click 事件处理器。"
      ],
      "tests": [
        {
          "text": "你的代码应该用<code>document.getElementById</code>方法来选择<code>getMessage</code>元素。",
          "testString": "assert(code.match(/document\\.getElementById\\(\\s*?('|\")getMessage\\1\\s*?\\)/g), '你的代码应该用<code>document.getElementById</code>方法来选择<code>getMessage</code>元素。');"
        },
        {
          "text": "你的代码应该添加<code>onclick</code>事件处理器。",
          "testString": "assert(typeof document.getElementById('getMessage').onclick === 'function', '你的代码应该添加<code>onclick</code>事件处理器。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    // 在这行下面添加代码",
            "    ",
            "    ",
            "    // 在这行上面添加代码",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fad367417b2b2512be2",
      "title": "Change Text with click Events",
      "description": [
        "当点击事件发生时，你可以使用 JavaScript 更新 HTML 元素。",
        "例如，当用户点击 \"Get Message\" 按钮时，它将改变类名<code>message</code>元素的文本为 \"Here is the message\"。",
        "通过在点击事件内添加以下代码实现：",
        "<code>document.getElementsByClassName('message')[0].innerHTML=\"Here is the message\";</code>",
        "<hr>",
        "在<code>onclick</code>事件处理器中添加代码，改变<code>message</code>元素内的文字为 \"Here is the message\"。"
      ],
      "tests": [
        {
          "text": "你的代码应该使用<code>document.getElementsByClassName</code>方法来选择类名为<code>message</code>的元素，然后将其<code>innerHTML</code>改为给定文字。",
          "testString": "assert(code.match(/document\\.getElementsByClassName\\(\\s*?('|\")message\\1\\s*?\\)\\[0\\]\\.innerHTML\\s*?=\\s*?('|\")Here is the message\\2/g), '你的代码应该使用<code>document.getElementsByClassName</code>方法来选择类名为<code>message</code>的元素，然后将其<code>innerHTML</code>改为给定文字。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      // 在这行下面添加代码",
            "      ",
            "      ",
            "      // 在这行上面添加代码",
            "    }",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fae367417b2b2512be3",
      "title": "Get JSON with the JavaScript XMLHttpRequest Method",
      "description": [
        "你还可以从外部链接请求数据，这就是 API 发挥作用的地方。",
        "请记住，API（或叫应用程序编程接口）是计算机用来互相通信的工具。你将学习如何通过 AJAX技术 从 API 获得的数据来更新 HTML。",
        "JSON 语法与 JavaScript 对象字面符号非常相似，JSON 具有对象属性以及其当前值，夹在<code>{</code> 和 <code>}</code>之间。",
        "这些属性及其值通常称为 \"键值对\"。",
        "但是，JSON 是由 API 以<code>bytes</code> 形式传输的，你的程序以<code>string</code>接受它。它们能转换成为 JavaScript 对象，但默认情况下它们不是 JavaScript 对象。 <code>JSON.parse</code>方法解析字符串并构造它描述的 JavaScript 对象。",
        "你可以从 freeCodeCamp 的 Cat Photo API 请求 JSON，以下是你可以在点击事件中添加的代码：",
        "<blockquote>req=new XMLHttpRequest();<br>req.open(\"GET\",'/json/cats.json',true);<br>req.send();<br>req.onload=function(){<br>&nbsp;&nbsp;json=JSON.parse(req.responseText);<br>&nbsp;&nbsp;document.getElementsByClassName('message')[0].innerHTML=JSON.stringify(json);<br>};</blockquote>",
        "这里介绍每行代码的作用，JavaScript <code>XMLHttpRequest</code> 对象具有许多用于传输数据的属性和方法。首先，创建一个<code>XMLHttpRequest</code>对象实例，并保存在<code>req</code>变量里 。",
        "接着, <code>open</code> 方法初始化请求 - 此示例从 API 请求数据，因此是个 \"GET\" 请求。第二个参数 <code>open</code> 是你要从中请求数据的 API 的 URL。第三个参数是一个布尔值， <code>true</code>使其成为异步请求。",
        "该<code>send</code>方法发送请求，最后，<code>onload</code>事件处理程序解析返回的数据并应用该<code>JSON.stringify</code>方法将JavaScript对象转换为字符串，然后将此字符串作为消息文本插入。",
        "<hr>",
        "更新代码以创建并向 freeCodeCamp Cat Photo API 发送 \"GET\" 请求。然后点击 \"Get Message\" 按钮，你的 AJAX 函数将使用 API 的原生 JSON 替换 \"The message will go here\" 的文本。"
      ],
      "tests": [
        {
          "text": "你的代码应该创建一个新的<code>XMLHttpRequest</code>。",
          "testString": "assert(code.match(/new\\s+?XMLHttpRequest\\(\\s*?\\)/g), '您的代码应该创建一个新的 <code>XMLHttpRequest</code>。');"
        },
        {
          "text": "你的代码应使用该<code>open</code>方法初始化对 freeCodeCamp Cat Photo API 的 \"GET\" 请求。",
          "testString": "assert(code.match(/\\.open\\(\\s*?('|\")GET\\1\\s*?,\\s*?('|\")\\/json\\/cats\\.json\\2\\s*?,\\s*?true\\s*?\\)/g), '你的代码应使用该<code>open</code>方法初始化对 freeCodeCamp Cat Photo API 的 \"GET\" 请求。');"
        },
        {
          "text": "你的代码应使用该<code>send</code>方法发送请求。",
          "testString": "assert(code.match(/\\.send\\(\\s*\\)/g), '你的代码应使用该<code>send</code>方法发送请求。');"
        },
        {
          "text": "你的代码应该有一个<code>onload</code>设置为函数的事件处理程序。",
          "testString": "assert(code.match(/\\.onload\\s*=\\s*function\\(\\s*?\\)\\s*?{/g), '你的代码应该有一个<code>onload</code>设置为函数的事件处理程序。');"
        },
        {
          "text": "你的代码应该使用该<code>JSON.parse</code>方法来解析<code>responseText</code>。",
          "testString": "assert(code.match(/JSON\\.parse\\(.*\\.responseText\\)/g), '你的代码应该使用该<code>JSON.parse</code>方法来解析<code>responseText</code>。');"
        },
        {
          "text": "你的代码应该用<code>message</code>获取元素，并将其内部 HTML 转换为 JSON 数据字符串。",
          "testString": "assert(code.match(/document\\.getElementsByClassName\\(\\s*?('|\")message\\1\\s*?\\)\\[0\\]\\.innerHTML\\s*?=\\s*?JSON\\.stringify\\(.+?\\)/g), '你的代码应该用<code>message</code>获取元素，并将其内部 HTML 转换为 JSON 数据字符串。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      // 在这行下面添加代码",
            "      ",
            "      ",
            "      // 在这行上面添加代码",
            "    };",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fae367417b2b2512be4",
      "title": "Access the JSON Data from an API",
      "description": [
        "在前面的挑战中，你了解了如何从 freeCodeCamp Cat Photo API 获取 JSON 数据。",
        "现在，你将进一步观察返回的数据来更好的了解 JSON 格式，回忆一下 JavaScript 中的一些符号：",
        "<blockquote>[ ] -> 方括号表示数组<br>{ } -> 大括号表示对象<br>\" \" -> 双引号表示字符串，它们还用于表示 JSON 中的键名</blockquote>",
        "理解 API 返回数据的结构是必需的，它将影响你如何获取你所需的值。",
        "在右侧，点击 \"Get Message\" 按钮，将 freeCodeCamp Cat Photo API JSON 加载到页面中。",
        "你看到在 JSON 数据中的第一个和最后一个字符是中括号<code>[ ]</code>，这意味着返回的数据是一个数组。JSON 数据中的第二个符号是一个大括号<code>{</code>，这意味着是一个对象。再仔细看，你会发现有三个独立的对象，这个 JSON 数据是一个包含三个对象的数组，它们各自都包含了 cat photo 的信息。",
        "你之前了解了对象包含了用逗号分隔的 \"键值对\"。在 Cat Photo 示例中，第一个对象的<code>\"id\":0</code>\"id\" 是键，0 是其对应的值，类似的，\"imageLink\", \"altText\", 和 \"codeNames\" 都是对应的键。每个 cat photo 对象具有相同的键，但具有不同的值 ",
        "在第一个对象中有一个有趣的 \"键值对\" 它是<code>\"codeNames\":[\"Juggernaut\",\"Mrs. Wallace\",\"ButterCup\"]</code>。 \"codeNames\" 是键，它的值是包含三个字符串的数组。对象数组以及数组作为键可以作为值 ",
        "记住如何访问数组和对象中的数据，数组使用括号表示法来访问项目的特定索引，对象使用括号或点表示法来访问给定属性的值。这是打印第一张 cat photo 的“altText”的示例 - 请注意，编辑器中解析的 JSON 数据保存在名为<code>json</code>的变量中：",
        "<blockquote>console.log(json[0].altText);<br>// 打印 \"头上戴着绿色瓜状头盔的白猫。\"</blockquote>",
        "<hr>",
        "对于 \"id\" 是 2 的猫， 打印<code>codeNames</code>数组的第二个值到控制台，你应该在对象上使用括号或者点表示法（保存在变量<code>json</code>）中来访问该值。"
      ],
      "tests": [
        {
          "text": "你的代码应该使用括号和点表示法来读取正确的代码名称，并将 \"Loki\" 打印到控制台。",
          "testString": "assert(code.match(/(?:json\\[2\\]\\.codeNames\\[1\\]|json\\[2\\]\\[('|\")codeNames\\1\\]\\[1\\])/g), '你的代码应该使用括号和点表示法来读取正确的代码名称，并将 \"Loki\" 打印到控制台。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      req=new XMLHttpRequest();",
            "      req.open(\"GET\",'/json/cats.json',true);",
            "      req.send();",
            "      req.onload=function(){",
            "        json=JSON.parse(req.responseText);",
            "        document.getElementsByClassName('message')[0].innerHTML=JSON.stringify(json);",
            "        // 在这行下面添加代码",
            "        ",
            "        ",
            "        // 在这行上面添加代码",
            "      };",
            "    };",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fae367417b2b2512be5",
      "title": "Convert JSON Data to HTML",
      "description": [
        "现在你可以从 JSON API 获取数据了，你可以在 HTML 中显示它。",
        "既然 cat photo 对象保存在数组里，你可以使用<code>forEach</code>方法来遍历它。当你拿到每个对象时，你就可以修改 HTML 元素了。",
        "首先，用<code>var html = \"\";</code>声明一个变量。",
        "接着，遍历 JSON，将 HTML 添加到用<code>strong</code>标记键名的变量，后面跟着值。当循环结束后渲染它。",
        "这是执行此操作的代码：",
        "<blockquote>json.forEach(function(val) {</br>&nbsp;&nbsp;var keys = Object.keys(val);</br>&nbsp;&nbsp;html += \"&lt;div class = 'cat'&gt;\";</br>&nbsp;&nbsp;keys.forEach(function(key) {</br>&nbsp;&nbsp;&nbsp;&nbsp;html += \"&lt;strong&gt;\" + key + \"&lt;/strong&gt;: \" + val[key] + \"&lt;br&gt;\";</br>&nbsp;&nbsp;});</br>&nbsp;&nbsp;html += \"&lt;/div&gt;&lt;br&gt;\";</br>});</blockquote>",
        "<hr>",
        "添加一个<code>forEach</code>循环 JSON 数据的方法，并创建 HTML 元素以显示它。",
        "这些是一下 JSON 示例",
        "<blockquote>[</br>&nbsp;&nbsp;{</br>&nbsp;&nbsp;&nbsp;&nbsp;\"id\":0,</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"imageLink\":\"https://s3.amazonaws.com/freecodecamp/funny-cat.jpg\",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"altText\":\"一只头上戴着绿色瓜状头盔的白猫\",</br>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\"codeNames\":[ \"Juggernaut\", \"Mrs. Wallace\", \"Buttercup\"</br>&nbsp;&nbsp;&nbsp;&nbsp;]</br>&nbsp;&nbsp;}</br>]</blockquote>"
      ],
      "tests": [
        {
          "text": "你的代码应该将数据保存在<code>html</code>变量中。",
          "testString": "assert(code.match(/html\\s+?(\\+=|=\\shtml\\s\\+)/g), '你的代码应该将数据保存在<code>html</code>变量中。');"
        },
        {
          "text": "你的代码应该使用<code>forEach</code>方法来遍历 API 中的 JSON 数据。",
          "testString": "assert(code.match(/json\\.forEach/g), '你的代码应该使用<code>forEach</code>方法来遍历 API 中的 JSON 数据。');"
        },
        {
          "text": "你的代码应该将键名包装在<code>strong</code>标签中。",
          "testString": "assert(code.match(/<strong>.+<\\/strong>/g), '你的代码应该将键名包装在<code>strong</code>标签中。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      req=new XMLHttpRequest();",
            "      req.open(\"GET\",'/json/cats.json',true);",
            "      req.send();",
            "      req.onload=function(){",
            "        json=JSON.parse(req.responseText);",
            "        var html = \"\";",
            "        // 在这行下面添加代码",
            "        ",
            "        ",
            "        ",
            "        // 在这行上面添加代码",
            "        document.getElementsByClassName('message')[0].innerHTML=html;",
            "      };",
            "    };",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fae367417b2b2512be6",
      "title": "Render Images from Data Sources",
      "description": [
        "前几个挑战中表明，JSON 数组中的每个对象都包含一个<code>imageLink</code>键，其值为猫图像的 URL。",
        "当你遍历这些对象的时候，你可以使用<code>imageLink</code>属性在<code>img</code>元素中显示此图像。",
        "这是执行此操作的代码：",
        "<code>html += \"&lt;img src = '\" + val.imageLink + \"' \" + \"alt='\" + val.altText + \"'&gt;\";</code>",
        "<hr>",
        "添加代码以在<code>img</code>标签中使用<code>imageLink</code>和<code>altText</code>属性。"
      ],
      "tests": [
        {
          "text": "你应该使用<code>imageLink</code>属性来显示图像。",
          "testString": "assert(code.match(/val\\.imageLink/g), '你应该使用<code>imageLink</code>属性来显示图像。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      req=new XMLHttpRequest();",
            "      req.open(\"GET\",'/json/cats.json',true);",
            "      req.send();",
            "      req.onload=function(){",
            "        json=JSON.parse(req.responseText);",
            "        var html = \"\";",
            "        json.forEach(function(val) {",
            "          html += \"<div class = 'cat'>\";",
            "          // 在这行下面添加代码",
            "          ",
            "          ",
            "          // 在这行上面添加代码",
            "          html += \"</div><br>\";",
            "        });",
            "        document.getElementsByClassName('message')[0].innerHTML=html;",
            "      };",
            "     };",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7fae367417b2b2512be7",
      "title": "Pre-filter JSON to Get the Data You Need",
      "description": [
        "如果你不希望渲染每张从 freeCodeCamp Cat Photo API 取回的猫照片，你可以在循环先预先过滤 JSON 数据。",
        "鉴于 JSON 数据都存储在数组中，你可以使用<code>filter</code>方法过滤掉 \"id\" 键值为 1 的猫。",
        "这是执行此操作的代码：",
        "<blockquote>json = json.filter(function(val) {<br>&nbsp;&nbsp;return (val.id !== 1);<br>});</blockquote>",
        "<hr>",
        "将<code>filter</code>代码添加到 JSON 数据中来移除 \"id\" 值为 1 的猫。"
      ],
      "tests": [
        {
          "text": "你的代码应该使用<code>filter</code>方法。",
          "testString": "assert(code.match(/json\\.filter/g), '你的代码应该使用<code>filter</code>方法。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('getMessage').onclick=function(){",
            "      req=new XMLHttpRequest();",
            "      req.open(\"GET\",'/json/cats.json',true);",
            "      req.send();",
            "      req.onload=function(){",
            "        json=JSON.parse(req.responseText);",
            "        var html = \"\";",
            "        // 在这行下面添加代码",
            "        ",
            "        ",
            "        // 在这行上面添加代码",
            "         json.forEach(function(val) {",
            "           html += \"<div class = 'cat'>\"",
            "           ",
            "           html += \"<img src = '\" + val.imageLink + \"' \" + \"alt='\" + val.altText + \"'>\"",
            "           ",
            "           html += \"</div>\"",
            "         });",
            "         document.getElementsByClassName('message')[0].innerHTML=html;",
            "       };",
            "     }; ",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Photo Finder</h1> ",
            "<p class=\"message box\">",
            "  The message will go here",
            "</p>",
            "<p>",
            "  <button id=\"getMessage\">",
            "    Get Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7faf367417b2b2512be8",
      "title": "Get Geolocation Data to Find A User's GPS Coordinates",
      "description": [
        "你还能做一件很酷的事就是访问你用户当前的地理位置，每个浏览器都有内置的导航器，可以为你提供这些信息。",
        "导航器会获取用户当前的经度和纬度。",
        "您将看到允许或阻止此站点了解您当前位置的提示。只要代码正确，挑战就可以以任何一种方式完成。",
        "通过选择允许，你将看到输出手机上的文本更改为你的纬度和经度",
        "这是执行此操作的代码：",
        "<blockquote>if (navigator.geolocation){<br>&nbsp;&nbsp;navigator.geolocation.getCurrentPosition(function(position) {<br>&nbsp;&nbsp;&nbsp;&nbsp;document.getElementById('data').innerHTML=\"latitude: \"+ position.coords.latitude +  \"&lt;br&gt;longitude: \" +  position.coords.longitude;<br>&nbsp;&nbsp;});<br>}</blockquote>",
        "首先，它检查<code>navigator.geolocation</code>对象是否存在。如果是，<code>getCurrentPosition</code>则调用该对象上的方法，该方法启动对用户位置的异步请求。如果请求成功，则运行方法中的回调函数。此函数<code>position</code>使用点表示法访问对象的纬度和经度值，并更新页面。",
        "<hr>",
        "在<code>script</code>标记内添加示例代码以检查用户的当前位置并将其插入 HTML"
      ],
      "tests": [
        {
          "text": "你的代码应该用于<code>navigator.geolocation</code>访问用户的当前位置。",
          "testString": "assert(code.match(/navigator\\.geolocation\\.getCurrentPosition/g), '你的代码应该用于<code>navigator.geolocation</code>访问用户的当前位置。');"
        },
        {
          "text": "你的代码应该用于<code>position.coords.latitude</code>显示用户的纬度位置。",
          "testString": "assert(code.match(/position\\.coords\\.latitude/g), '你的代码应该用于<code>position.coords.latitude</code>显示用户的纬度位置。');"
        },
        {
          "text": "你的代码应该用于<code>position.coords.longitude</code>显示用户的经度位置。",
          "testString": "assert(code.match(/position\\.coords\\.longitude/g), '你的代码应该用于<code>position.coords.longitude</code>显示用户的经度位置。');"
        },
        {
          "text": "你应该在<code>data</code>div 元素中显示用户的位置。",
          "testString": "assert(code.match(/document\\.getElementById\\(\\s*?('|\")data\\1\\s*?\\)\\.innerHTML/g), '你应该在<code>data</code>div 元素中显示用户的位置。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  // 在这行下面添加代码",
            "  ",
            "  ",
            "  // 在这行上面添加代码",
            "</script>",
            "<h4>You are here:</h4>",
            "<div id=\"data\">",
            "",
            "</div>"
          ],
          "head": [],
          "tail": []
        }
      }
    },
    {
      "id": "587d7faf367417b2b2512be9",
      "title": "Post Data with the JavaScript XMLHttpRequest Method",
      "description": [
        "在前面的示例中，你在外部资源获取数据，你也可以将数据发送到外部资源，只要该资源支持 AJAX 请求并且你知道 URL。",
        "",
        "JavaScript 的<code>XMLHttpRequest</code>方法也用于将数据发布到服务器，这是个例子：",
        "<blockquote>req=new XMLHttpRequest();<br>req.open(\"POST\",url,true);<br>req.setRequestHeader('Content-Type','text/plain');<br>req.onreadystatechange=function(){<br>&nbsp;&nbsp;if(req.readyState==4 && req.status==200){<br>&nbsp;&nbsp;&nbsp;&nbsp;document.getElementsByClassName('message')[0].innerHTML=req.responseText;<br>&nbsp;&nbsp;}<br>};<br>req.send(userName);</blockquote>",
        "你在之前见过其中几种方法。这里<code>open</code>方法将请求初始化为对外部资源的给定 URL 的 \"POST\"，并使用<code>true</code>布尔值使其异步。",
        "<code>setRequestHeader</code>方法设置HTTP请求标头的值，该标头包含有关发送人和请求的信息。它必须在<code>open</code>方法之后调用，但在<code>send</code>方法之前调用。这两个参数是标题的名称和要设置为该标题正文的值。",
        "接下来，<code>onreadystatechange</code>事件侦听器处理请求状态的更改。<code>readyState</code>为 4 表示操作完成，<code>status</code>200表示操作成功。文档的HTML可以更新。",
        "最后，该<code>send</code>方法发送带有<code>userName</code>值的请求，该值由用户在<code>input</code>字段中给出。",
        "<hr>",
        "更新代码以创建并发送 \"POST\" 请求。然后在输入框中输入你的姓名，你的 AJAX 函数会用服务器返回的数据替换 \"Reply from Server will be here\"。在这种情况下，你的名字附加 \"爱猫\"。"
      ],
      "tests": [
        {
          "text": "你的代码应该创建一个新的<code>XMLHttpRequest</code>。",
          "testString": "assert(code.match(/new\\s+?XMLHttpRequest\\(\\s*?\\)/g), '你的代码应该创建一个新的<code>XMLHttpRequest</code>。');"
        },
        {
          "text": "你的代码应该使用该<code>open</code>方法初始化到服务器的 \"POST\" 请求。",
          "testString": "assert(code.match(/\\.open\\(\\s*?('|\")POST\\1\\s*?,\\s*?url\\s*?,\\s*?true\\s*?\\)/g), '你的代码应该使用该<code>open</code>方法初始化到服务器的 \"POST\" 请求。');"
        },
        {
          "text": "你的代码应该使用该<code>setRequestHeader</code>方法。",
          "testString": "assert(code.match(/\\.setRequestHeader\\(\\s*?('|\")Content-Type\\1\\s*?,\\s*?('|\")text\\/plain\\2\\s*?\\)/g), '你的代码应该使用该<code>setRequestHeader</code>方法。');"
        },
        {
          "text": "你的代码应该有一个<code>onreadystatechange</code>设置为函数的事件处理程序。",
          "testString": "assert(code.match(/\\.onreadystatechange\\s*?=/g), '你的代码应该有一个<code>onreadystatechange</code>设置为函数的事件处理程序。');"
        },
        {
          "text": "你的代码应该使用类获取元素<code>message</code>并将其内部HTML更改为<code>responseText</code>。",
          "testString": "assert(code.match(/document\\.getElementsByClassName\\(\\s*?('|\")message\\1\\s*?\\)\\[0\\]\\.innerHTML\\s*?=\\s*?.+?\\.responseText/g), '你的代码应该使用类获取元素<code>message</code>并将其内部HTML更改为<code>responseText</code>。');"
        },
        {
          "text": "你的代码应该使用该<code>send</code>方法。",
          "testString": "assert(code.match(/\\.send\\(\\s*?userName\\s*?\\)/g), '你的代码应该使用该<code>send</code>方法。');"
        }
      ],
      "solutions": [],
      "hints": [],
      "releasedOn": "Feb 17, 2017",
      "challengeType": 0,
      "files": {
        "indexhtml": {
          "key": "indexhtml",
          "ext": "html",
          "name": "index",
          "contents": [
            "<script>",
            "  document.addEventListener('DOMContentLoaded',function(){",
            "    document.getElementById('sendMessage').onclick=function(){",
            "    ",
            "      var userName=document.getElementById('name').value;",
            "      // 在这行下面添加代码",
            "      ",
            "      ",
            "      // 在这行上面添加代码",
            "    };",
            "  });",
            "</script>",
            "<style>",
            "  body {",
            "    text-align: center;",
            "    font-family: \"Helvetica\", sans-serif;",
            "  }",
            "  h1 {",
            "    font-size: 2em;",
            "    font-weight: bold;",
            "  }",
            "  .box {",
            "    border-radius: 5px;",
            "    background-color: #eee;",
            "    padding: 20px 5px;",
            "  }",
            "  button {",
            "    color: white;",
            "    background-color: #4791d0;",
            "    border-radius: 5px;",
            "    border: 1px solid #4791d0;",
            "    padding: 5px 10px 8px 10px;",
            "  }",
            "  button:hover {",
            "    background-color: #0F5897;",
            "    border: 1px solid #0F5897;",
            "  }",
            "</style>",
            "<h1>Cat Friends</h1> ",
            "<p class=\"message box\">",
            "  Reply from Server will be here",
            "</p>",
            "<p>",
            "  <label for=\"name\">Your name:",
            "    <input type=\"text\" id=\"name\"/>",
            "  </label>",
            "  <button id=\"sendMessage\">",
            "    Send Message",
            "  </button>",
            "</p>"
          ],
          "head": [],
          "tail": []
        }
      }
    }
  ]
}